# Generated by Django 5.1.4 on 2025-01-31 23:11

import django.core.validators
import django.db.models.deletion
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blockchains', '0013_alter_blockchainvalidator_voting_power'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertSettingComission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channels', multiselectfield.db.fields.MultiSelectField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channels')),
                ('sms_template', models.TextField(verbose_name='SMS Template')),
                ('voice_template', models.TextField(verbose_name='Voice Template')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('value', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100)], verbose_name='Value, %')),
            ],
            options={
                'verbose_name': 'Comission Alert Settings',
                'verbose_name_plural': 'Comission Alerts Settings',
                'ordering': ('value',),
            },
        ),
        migrations.CreateModel(
            name='AlertSettingJailedStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channels', multiselectfield.db.fields.MultiSelectField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channels')),
                ('sms_template', models.TextField(verbose_name='SMS Template')),
                ('voice_template', models.TextField(verbose_name='Voice Template')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('false_to_true', models.BooleanField(default=True)),
                ('true_to_false', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Jailed Status Alert Settings',
                'verbose_name_plural': 'Jailed Status Alerts Settings',
            },
        ),
        migrations.CreateModel(
            name='AlertSettingTombstonedStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channels', multiselectfield.db.fields.MultiSelectField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channels')),
                ('sms_template', models.TextField(verbose_name='SMS Template')),
                ('voice_template', models.TextField(verbose_name='Voice Template')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('false_to_true', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tombstoned Status Alert Settings',
                'verbose_name_plural': 'Tombstoned Status Alerts Settings',
            },
        ),
        migrations.CreateModel(
            name='AlertSettingUptime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channels', multiselectfield.db.fields.MultiSelectField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channels')),
                ('sms_template', models.TextField(verbose_name='SMS Template')),
                ('voice_template', models.TextField(verbose_name='Voice Template')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('value', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100)], verbose_name='Value, %')),
            ],
            options={
                'verbose_name': 'Uptime Alert Settings',
                'verbose_name_plural': 'Uptime Alerts Settings',
                'ordering': ('value',),
            },
        ),
        migrations.CreateModel(
            name='AlertSettingVotingPower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channels', multiselectfield.db.fields.MultiSelectField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channels')),
                ('sms_template', models.TextField(verbose_name='SMS Template')),
                ('voice_template', models.TextField(verbose_name='Voice Template')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('value', models.IntegerField(validators=[django.core.validators.MinValueValidator(100000), django.core.validators.MaxValueValidator(5000000)], verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Voting Power Alert Settings',
                'verbose_name_plural': 'Voting Power Alerts Settings',
                'ordering': ('value',),
            },
        ),
        migrations.CreateModel(
            name='UserAlertSettingComission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('channels', models.SlugField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channel')),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Current Value')),
                ('blockchain_validator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockchain_validator_user_alert_settings_comission', to='blockchains.blockchainvalidator', verbose_name='Validator')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_setting_comission_user_settings', to='alerts.alertsettingcomission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_alert_settings_comission', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Alert Setting Comission',
                'verbose_name_plural': 'User Alert Settings Comission',
                'unique_together': {('user', 'blockchain_validator')},
            },
        ),
        migrations.CreateModel(
            name='UserAlertSettingJailedStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('channels', models.SlugField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channel')),
                ('current_value', models.BooleanField(default=False)),
                ('blockchain_validator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockchain_validator_user_alert_settings_jailed_status', to='blockchains.blockchainvalidator', verbose_name='Validator')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_setting_jailed_status_user_settings', to='alerts.alertsettingjailedstatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_alert_settings_jailed_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Alert Setting Jailed Status',
                'verbose_name_plural': 'User Alert Settings Jailed Status',
                'unique_together': {('user', 'blockchain_validator')},
            },
        ),
        migrations.CreateModel(
            name='UserAlertSettingTombstonedStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('channels', models.SlugField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channel')),
                ('current_value', models.BooleanField(default=False)),
                ('blockchain_validator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockchain_validator_user_alert_settings_tombstoned_status', to='blockchains.blockchainvalidator', verbose_name='Validator')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_setting_tombstoned_status_user_settings', to='alerts.alertsettingtombstonedstatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_alert_settings_tombstoned_status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Alert Setting Tombstoned Status',
                'verbose_name_plural': 'User Alert Settings Tombstoned Status',
                'unique_together': {('user', 'blockchain_validator')},
            },
        ),
        migrations.CreateModel(
            name='UserAlertSettingUptime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('channels', models.SlugField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channel')),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Current Value')),
                ('blockchain_validator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockchain_validator_user_alert_settings_uptime', to='blockchains.blockchainvalidator', verbose_name='Validator')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_setting_uptime_user_settings', to='alerts.alertsettinguptime')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_alert_settings_uptime', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Alert Setting Uptime',
                'verbose_name_plural': 'User Alert Settings Uptime',
                'unique_together': {('user', 'blockchain_validator')},
            },
        ),
        migrations.CreateModel(
            name='UserAlertSettingVotingPower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Enabled')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('channels', models.SlugField(choices=[('SMS', 'SMS'), ('VOICE', 'Voice')], max_length=10, verbose_name='Alert Channel')),
                ('current_value', models.IntegerField(verbose_name='Current Value')),
                ('blockchain_validator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockchain_validator_user_alert_settings_voting_power', to='blockchains.blockchainvalidator', verbose_name='Validator')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_setting_voting_power_user_settings', to='alerts.alertsettingvotingpower')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_alert_settings_voting_power', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Alert Setting Voting Power',
                'verbose_name_plural': 'User Alert Settings Voting Power',
                'unique_together': {('user', 'blockchain_validator')},
            },
        ),
    ]
